---
import BaseLayout from "../layouts/BaseLayout.astro";
import TimelineItem from "../components/TimelineItem.astro";
import ScrollButton from "../components/ScrollButton.astro";
import EducationIcon from "../components/icons/EducationIcon.astro";
import WorkIcon from "../components/icons/WorkIcon.astro";
import StarIcon from "../components/icons/StarIcon.astro";
import LocationIcon from "../components/icons/LocationIcon.astro";

import { Image } from "astro:assets";
import avatar from "../assets/avatar.jpg";

import { timelineItems, projectItems } from "../utils/constants.ts";
---

<BaseLayout
  title="About"
  description="Have a look at my journey and technical expertise"
>
  <div class="max-w-7xl mx-auto lg:px-8 overflow-hidden">
    <div class="flex flex-col justify-center min-h-[calc(100vh-8rem)]">
      <section class="pt-12 pb-8">
        <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
          <div class="lg:col-span-1">
            <div class="flex flex-col items-center space-y-7">
              <div class="relative group">
                <div
                  class="absolute -inset-0.5 bg-gradient-to-r from-gray-400 to-gray-600 rounded-full opacity-75 group-hover:opacity-100 transition duration-700 group-hover:duration-200 animate-tilt blur-xs"
                >
                </div>
                <div class="relative rounded-full w-48 h-48 overflow-hidden">
                  <Image
                    src={avatar}
                    alt="Me"
                    width={192}
                    height={192}
                    format="webp"
                    fit="cover"
                    loading="eager"
                    quality={100}
                    class="opacity-0 duration-700 ease-in-out"
                    onload="this.classList.remove('opacity-0')"
                  />
                </div>
              </div>

              <div class="w-full card">
                <h3 class="heading-3">Key Details</h3>
                <div class="flex items-center gap-3 mt-4">
                  <StarIcon classes="w-5 h-5 text-gray-100" />
                  <p class="paragraph">2 years of experience</p>
                </div>
                <div class="flex items-center gap-3 my-3">
                  <LocationIcon classes="w-5 h-5 text-gray-100" />
                  <p class="paragraph">Brno, Czech Republic</p>
                </div>
                <div class="flex items-center gap-3 my-3">
                  <WorkIcon classes="w-5 h-5 text-gray-100" />
                  <p class="paragraph">Masaryk University</p>
                </div>
                <div class="flex items-center gap-3 lg:mb-2">
                  <EducationIcon classes="w-5 h-5 text-gray-100" />
                  <p class="paragraph">BUT IT Student</p>
                </div>
              </div>
            </div>
          </div>

          <div class="lg:col-span-3 space-y-6">
            <h1 class="heading-1">About Me</h1>
            <p class="paragraph">
              I am a
              <span class="font-semibold text-gray-100">software engineer</span>
              who loves
              <span class="font-semibold text-gray-100">front-end</span> development.
              I specialize in making modern <span
                class="font-semibold text-gray-100">web</span
              > and
              <span class="font-semibold text-gray-100">mobile</span> apps and have
              experience with various technologies and frameworks.
            </p>

            <h2 class="heading-2 border-t pt-6 border-gray-800">
              Technical Expertise
            </h2>
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-4">
              <div class="group card lg:col-span-2">
                <h3 class="heading-3">Core</h3>
                <p class="paragraph mt-2">
                  JavaScript, TypeScript, HTML, CSS, Tailwind, Redux, Zustand
                </p>
              </div>
              <div class="group card">
                <h3 class="heading-3">Web Specific</h3>
                <p class="paragraph mt-2">
                  React, Next.js, Astro, Three.js, MUI
                </p>
              </div>
              <div class="group card">
                <h3 class="heading-3">Mobile Specific</h3>
                <p class="paragraph mt-2">
                  Expo, React Native, Java, Kotlin, Gluestack UI
                </p>
              </div>
              <div class="group card lg:col-span-2">
                <h3 class="heading-3">Tools & Methods</h3>
                <p class="paragraph mt-2">
                  Git, Linux, Jest, Cypress, Webpack, Vite, Docker, CI/CD, Jira
                </p>
              </div>
            </div>
          </div>
        </div>
      </section>

      <ScrollButton classes="hidden lg:flex justify-center" />
    </div>

    <section id="journey" class="py-6">
      <h2 class="heading-2 text-center">Journey Timeline</h2>

      <div class="relative mt-12">
        <div
          class="absolute left-1/2 -translate-x-1/2 w-0.5 h-full bg-gradient-to-b from-gray-600 to-gray-900/50"
        >
        </div>

        {timelineItems.map((item) => <TimelineItem {...item} />)}
      </div>
    </section>

    <section class="pb-24">
      <h2 class="heading-2 text-center">Featured Projects</h2>

      <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mt-12">
        {
          projectItems.map((item) => (
            <div class="group card flex flex-col">
              {(item.link && item.link !== "dev") || item.sourceCode ? (
                <a
                  href={
                    item.link && item.link !== "dev"
                      ? item.link
                      : item.sourceCode
                  }
                  target="_blank"
                  rel="noopener noreferrer"
                  class="block cursor-pointer lg:transition-all lg:duration-700 lg:hover:scale-105"
                >
                  <Image
                    src={item.imageUrl}
                    alt={item.title}
                    class="rounded-sm mb-4"
                    width={420}
                    height={288}
                    format="webp"
                    quality={100}
                  />
                </a>
              ) : (
                <Image
                  src={item.imageUrl}
                  alt={item.title}
                  class="rounded-sm mb-4"
                  width={420}
                  height={288}
                  format="webp"
                  quality={100}
                />
              )}
              <h3 class="heading-3">{item.title}</h3>
              <p class="mt-2 text-sm lg:text-base text-gray-400 leading-relaxed tracking-wide">
                {item.years}
              </p>
              <p class="paragraph mt-2 mb-auto">{item.description}</p>
              <div class="flex gap-4 flex-col lg:flex-row mt-8 mt-6">
                {item.link && item.link !== "dev" ? (
                  <a
                    href={item.link}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="button w-full"
                  >
                    Launch
                  </a>
                ) : null}
                {item.sourceCode && (
                  <a
                    href={item.sourceCode}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="button-secondary w-full"
                  >
                    Source Code
                  </a>
                )}
                {!item.sourceCode && (
                  <div class="w-full text-center">
                    <p class="text-sm lg:text-base text-gray-400 leading-relaxed tracking-wide">
                      Restricted Access (︶︹︺)
                    </p>
                  </div>
                )}
              </div>
            </div>
          ))
        }
      </div>
    </section>
  </div>
</BaseLayout>

<script>
  const scrollButton = document.getElementById("scrollButton");
  const journeySection = document.getElementById("journey");

  scrollButton?.addEventListener("click", () => {
    journeySection?.scrollIntoView({
      behavior: "smooth",
      block: "start",
    });
  });

  function handleScrollAnimations() {
    const timelineItems = document.querySelectorAll(".timeline-item");

    timelineItems.forEach((item) => {
      const rect = item.getBoundingClientRect();
      const isVisible = rect.top <= window.innerHeight * 0.8;

      if (isVisible && !item.classList.contains("is-visible")) {
        item.classList.add("is-visible");

        item.classList.remove("opacity-0", "translate-y-10");
        item.classList.add("opacity-100", "translate-y-0");
      }
    });
  }

  window.addEventListener("scroll", handleScrollAnimations);
  window.addEventListener("DOMContentLoaded", handleScrollAnimations);
</script>
