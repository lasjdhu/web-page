---
import Model from "./Model";
import MenuIcon from "./icons/MenuIcon.astro";
import CloseIcon from "./icons/CloseIcon.astro";

let activeLink = new URL(Astro.request.url).pathname;
const links = [
  { href: "/", text: "Home" },
  { href: "/about", text: "About" },
  //{ href: "/blog", text: "Blog" },
  { href: "/contact", text: "Contact" },
];
---

<header class="flex flex-wrap items-center justify-between px-5 py-5 md:px-10">
  <div class="flex items-center">
    <Model client:load transition:persist />
    <a href="/" class="text-xl md:text-2xl font-semibold tracking-tighter ml-4">
      Dmitrii Ivanushkin
    </a>
  </div>

  <div class="md:hidden">
    <button
      type="button"
      id="menu-toggle"
      aria-expanded="false"
      aria-controls="mobile-menu"
      class="inline-flex items-center justify-center p-2 text-gray-800"
      onclick="toggleMenu()"
    >
      <span class="sr-only">Open main menu</span>
      <MenuIcon />
    </button>
  </div>

  <nav class="hidden md:flex space-x-12">
    {
      links.map(({ href, text }) => (
        <a
          href={href}
          class={`hover:text-gray-100 focus:text-gray-100 active:text-gray-100
          transition-all duration-200 text-base font-semibold
          ${activeLink === href ? "text-gray-100" : "text-gray-400"}
        `}
        >
          {text}
        </a>
      ))
    }
  </nav>

  <!-- Overlay -->
  <div
    id="mobile-menu"
    class="fixed inset-0 z-10 bg-black/50 opacity-0 pointer-events-none transition-opacity duration-300"
    onclick="toggleMenu()"
  >
  </div>

  <!-- Sliding Menu -->
  <div
    id="mobile-menu-content"
    class="fixed inset-y-0 right-0 z-20 w-3/4 bg-black px-6 py-6 transform translate-x-full transition-transform duration-300 ease-in-out"
  >
    <div class="flex items-center justify-between">
      <button
        type="button"
        aria-expanded="false"
        aria-controls="mobile-menu"
        class="inline-flex items-center justify-center p-2 text-gray-800"
        onclick="toggleMenu()"
      >
        <span class="sr-only">Close menu</span>
        <CloseIcon />
      </button>
    </div>

    <nav class="flex flex-col mt-6 space-y-4">
      {
        links.map(({ href, text }) => (
          <a
            href={href}
            class={`hover:text-gray-100 focus:text-gray-100 active:text-gray-100
            transition-all duration-200 text-base font-semibold
            ${activeLink === href ? "text-gray-100" : "text-gray-400"}
          `}
            onclick="closeMenuBeforeNavigate(event, this.href)"
          >
            {text}
          </a>
        ))
      }
    </nav>
  </div>
</header>

<script is:inline>
  const toggleMenu = () => {
    const menu = document.getElementById("mobile-menu");
    const menuContent = document.getElementById("mobile-menu-content");
    const isOpen = menu.classList.contains("opacity-0");

    if (isOpen) {
      menu.classList.remove("opacity-0", "pointer-events-none");
      menuContent.classList.remove("translate-x-full");
      menu.setAttribute("aria-expanded", "true");
    } else {
      menu.classList.add("opacity-0", "pointer-events-none");
      menuContent.classList.add("translate-x-full");
      menu.setAttribute("aria-expanded", "false");
    }
  };

  const closeMenuBeforeNavigate = (event, url) => {
    event.preventDefault();
    toggleMenu();

    setTimeout(() => {
      window.location.href = url;
    }, 300);
  };
</script>
